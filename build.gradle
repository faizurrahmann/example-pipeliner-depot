/*
 * This file was generated by the Gradle 'init' task and extended manually.
 */

plugins {
    // Apply the groovy plugin to add support for Groovy
    id 'groovy'
}

version '0.1.0'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()

    maven {
        url 'http://repo.jenkins-ci.org/public'
    }
    maven {
        url 'https://dl.bintray.com/jfrog/jfrog-jars/'
    }

}

dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.26'
    compile 'org.codehaus.groovy:groovy-all:2.5.6'
    compile 'net.sf.json-lib:json-lib:2.4:jdk15'
    compile 'org.jenkins-ci.main:jenkins-core:2.222.1'
    compile 'com.cloudbees:groovy-cps:1.22'

    // https://stackoverflow.com/a/47353745
    compile group: 'org.jenkins-ci.plugins', name: 'git', version: '4.0.0', ext: 'jar'
    compile group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-api', version: '2.40', ext: 'jar'
    compile group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-cps', version: '2.80', ext: 'jar'
    compile group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-support', version: '3.4', ext: 'jar'
    compile group: 'org.jenkins-ci.plugins', name: 'artifactory', version: '3.6.1', ext: 'jar'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'com.lesfurets:jenkins-pipeline-unit:1.2'
    testCompile 'org.xmlunit:xmlunit-core:2.6.3'

}

sourceSets {
    main {
        groovy {
            srcDirs = ['src']
        }
    }
    test {
        groovy {
            srcDirs = ['test']
        }
    }
}

groovydoc {
    use = true
    groovyClasspath = configurations.compile
    source = sourceSets.main.groovy
    overviewText = resources.text.fromFile("index.html")
}

task copyTask(type: Copy,) {
    from '.'
    into 'build/libs/example-pipeliner-depot@master'
    include 'src/**'
    include 'vars/**'
}

task unitTests(type: Test,) {
    include 'unitTests/*'
}

task componentTests(type: Test,) {
    include 'componentTests/*'
}

tasks.withType(Test) {
    dependsOn copyTask
}
